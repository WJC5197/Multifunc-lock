C51 COMPILER V9.01   TEMP                                                                  06/02/2021 22:42:39 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN temp.obj
COMPILER INVOKED BY: D:\keil4\C51\BIN\C51.EXE SRC\temp.c LARGE BROWSE INCDIR(.\SRC) DEBUG OBJECTEXTEND PRINT(.\temp.lst)
                    - OBJECT(temp.obj)

line level    source

   1          #include"temp.h"
   2          #include <intrins.h>
   3          /*******************************************************************************
   4          * 函 数 名         : Delay1ms
   5          * 函数功能                 : 延时函数
   6          * 输    入         : 无
   7          * 输    出         : 无
   8          *******************************************************************************/
   9          
  10          void Delay_DS18B20(int num)
  11          {
  12   1        while(num--) ;
  13   1      }
  14          
  15          void Delay1ms(u16 y)
  16          {
  17   1              u16 x;
  18   1              for( ; y>0; y--)
  19   1              {
  20   2                      for(x=110; x>0; x--);
  21   2              }
  22   1      }
  23          /*******************************************************************************
  24          * 函 数 名         : Ds18b20Init
  25          * 函数功能                 : 初始化
  26          * 输    入         : 无
  27          * 输    出         : 初始化成功返回1，失败返回0
  28          *******************************************************************************/
  29          
  30          u8 Ds18b20Init()
  31          {
  32   1        unsigned char x=0;
  33   1        DSPORT = 1;         //DQ复位
  34   1        Delay_DS18B20(8);    //稍做延时
  35   1        DSPORT = 0;         //单片机将DQ拉低
  36   1        Delay_DS18B20(80);   //精确延时，大于480us
  37   1        DSPORT = 1;         //拉高总线
  38   1        Delay_DS18B20(14);
  39   1        x = DSPORT;           //稍做延时后，如果x=0则初始化成功，x=1则初始化失败
  40   1        Delay_DS18B20(20);
  41   1        return x;
  42   1      }
  43          /*****************************************************************
  44          * 函 数 名         : Ds18b20WriteByte
  45          * 函数功能                 : 向18B20写入一个字节
  46          * 输    入         : 无
  47          * 输    出         : 无
  48          *******************************************************************************/
  49          
  50          void Ds18b20WriteByte(u8 dat)
  51          {
  52   1        unsigned char i=0;
  53   1        for (i=8; i>0; i--)
  54   1        {
C51 COMPILER V9.01   TEMP                                                                  06/02/2021 22:42:39 PAGE 2   

  55   2          DSPORT = 0;
  56   2          DSPORT = dat&0x01;
  57   2          Delay_DS18B20(5);
  58   2          DSPORT = 1;
  59   2          dat>>=1;
  60   2        }
  61   1      }
  62          /*******************************************************************************
  63          * 函 数 名         : Ds18b20ReadByte
  64          * 函数功能                 : 读取一个字节
  65          * 输    入         : 无
  66          * 输    出         : 无
  67          *******************************************************************************/
  68          
  69          
  70          u8 Ds18b20ReadByte()
  71          {
  72   1        unsigned char i=0;
  73   1        unsigned char byte = 0;
  74   1        for (i=8;i>0;i--)
  75   1        {
  76   2          DSPORT = 0;     // 给脉冲信号
  77   2          byte>>=1;
  78   2          DSPORT = 1;     // 给脉冲信号
  79   2          if(DSPORT)
  80   2          byte|=0x80;
  81   2          Delay_DS18B20(4);
  82   2        }
  83   1        return(byte);
  84   1      }
  85          /*******************************************************************************
  86          * 函 数 名         : Ds18b20ChangTemp
  87          * 函数功能                 : 让18b20开始转换温度
  88          * 输    入         : 无
  89          * 输    出         : 无
  90          *******************************************************************************/
  91          
  92          void  Ds18b20ChangTemp()
  93          {
  94   1              Ds18b20Init();
  95   1              Delay1ms(1);
  96   1              Ds18b20WriteByte(0xcc);         //跳过ROM操作命令                
  97   1              Ds18b20WriteByte(0x44);     //温度转换命令
  98   1              Delay1ms(100);  //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
  99   1         
 100   1      }
 101          /*******************************************************************************
 102          * 函 数 名         : Ds18b20ReadTempCom
 103          * 函数功能                 : 发送读取温度命令
 104          * 输    入         : 无
 105          * 输    出         : 无
 106          *******************************************************************************/
 107          
 108          void Ds18b20ReadTempCom()
 109          {       
 110   1      
 111   1              Ds18b20Init();
 112   1              Delay1ms(1);
 113   1              Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
 114   1              Ds18b20WriteByte(0xbe);  //发送读取温度命令
 115   1      }
 116          /*******************************************************************************
C51 COMPILER V9.01   TEMP                                                                  06/02/2021 22:42:39 PAGE 3   

 117          * 函 数 名         : Ds18b20ReadTemp
 118          * 函数功能                 : 读取温度
 119          * 输    入         : 无
 120          * 输    出         : 无
 121          *******************************************************************************/
 122          
 123          unsigned int Ds18b20ReadTemp()
 124          {
 125   1        unsigned char a=0;
 126   1        unsigned char b=0;
 127   1        unsigned int t=0;
 128   1        float tt=0;
 129   1        Ds18b20Init();
 130   1        Ds18b20WriteByte(0xCC);  //跳过读序号列号的操作
 131   1        Ds18b20WriteByte(0x44);  //启动温度转换
 132   1        Ds18b20Init();
 133   1        Ds18b20WriteByte(0xCC);  //跳过读序号列号的操作
 134   1        Ds18b20WriteByte(0xBE);  //读取温度寄存器
 135   1        a=Ds18b20ReadByte();     //读低8位
 136   1        b=Ds18b20ReadByte();    //读高8位
 137   1        t=b;                             //高8位转移到t
 138   1        t<<=8;                           //t数据左移8位
 139   1        t=t|a;                           //将t和a按位或，得到一个16位的数
 140   1        tt=t*0.0625;             //将t乘以0.0625得到实际温度值（温度传感器设置12位精度，最小分辨率是0.0625）
 141   1        t= tt*10+0.5;     //放大10倍（将小数点后一位显示出来）输出并四舍五入
 142   1        return(t);               //返回温度值
 143   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    287    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
