C51 COMPILER V9.01   EEPROM                                                                06/02/2021 20:52:43 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN EEPROM.obj
COMPILER INVOKED BY: D:\keil4\C51\BIN\C51.EXE SRC\EEPROM.C LARGE BROWSE INCDIR(.\SRC) DEBUG OBJECTEXTEND PRINT(.\EEPROM.
                    -lst) OBJECT(EEPROM.obj)

line level    source

   1          
   2          #include "reg52.h"
   3          #include "intrins.h"
   4          #include "uart.h"
   5          #include "sbit.h"
   6          #include "EEPROM.h"
   7          
   8          sfr IAP_DATA    = 0xE2;
   9          sfr IAP_ADDRH   = 0xE3;
  10          sfr IAP_ADDRL   = 0xE4;
  11          sfr IAP_CMD     = 0xE5;
  12          sfr IAP_TRIG    = 0xE6;
  13          sfr IAP_CONTR   = 0xE7;
  14          
  15          //定义Flash 操作等待时间及允许IAP/ISP/EEPROM 操作的常数
  16          //#define ENABLE_ISP 0x80 //系统工作时钟<5MHz 时，对IAP_CONTR 寄存器设置此值
  17          //#define ENABLE_ISP 0x81 //系统工作时钟<10MHz 时，对IAP_CONTR 寄存器设置此值
  18          #define ENABLE_ISP 0x82 //系统工作时钟<20MHz 时，对IAP_CONTR 寄存器设置此值
  19          //#define ENABLE_ISP 0x83 //系统工作时钟<40MHz 时，对IAP_CONTR 寄存器设置此值
  20          
  21          #define DATA_FLASH_START_ADDRESS 0x8000 //STC89C58rd 系列 EEPROM 测试起始地址
  22          //------------------------------------------------------------------------------------------
  23          
  24          u8 Byte_Read(u16 add);              //读一字节，调用前需打开IAP 功能
  25          void Byte_Program(u16 add, u8 ch); //字节编程，调用前需打开IAP 功能
  26          void Sector_Erase(u16 add);            //擦除扇区
  27          void IAP_Disable();                       //关闭IAP 功能
  28          void delayms(u16 z);
  29          void EEPROM_Init();
  30          //------------------------------------------------------------------------------
  31          /*struct EEP_dat
  32          {   
  33          u16 add;
  34          u8 dat;
  35          }count;*/
  36          //------------------------------------------------------------------------------
  37          //a: 扇区 (0~7) 代表1到8个扇区
  38          void EEPROM_WRITE(u8 a,u8 *p,u8 b)
  39          {       
  40   1         u8 i;
  41   1         Sector_Erase(DATA_FLASH_START_ADDRESS+0x2000*a);//删除第a+1个扇区内容，才能写入  
  42   1      
  43   1         for(i=0;i<b;i++)
  44   1         Byte_Program(DATA_FLASH_START_ADDRESS+0x2000*a+i,p[i]);
  45   1         delayms(500);
  46   1      
  47   1      }//-----------------------------------------------------------------------------
  48          void EEPROM_READ(u8 a, u8 *p, u8 b)
  49          {
  50   1         u8 i;
  51   1         
  52   1         for(i=0;i<b;i++)
  53   1         p[i]=Byte_Read(DATA_FLASH_START_ADDRESS+0x2000*a+i);     
  54   1         delayms(500);
C51 COMPILER V9.01   EEPROM                                                                06/02/2021 20:52:43 PAGE 2   

  55   1      }
  56          //-----------------------------------------------------------------------------
  57          //读一字节，调用前需打开IAP 功能，入口:DPTR = 字节地址，返回:A = 读出字节
  58          u8 Byte_Read(u16 add)
  59          {
  60   1          IAP_DATA = 0x00;
  61   1          IAP_CONTR = ENABLE_ISP;         //打开IAP 功能, 设置Flash 操作等待时间
  62   1          IAP_CMD = 0x01;                 //IAP/ISP/EEPROM 字节读命令
  63   1      
  64   1          IAP_ADDRH = (u8)(add>>8);    //设置目标单元地址的高8 位地址
  65   1          IAP_ADDRL = (u8)(add&0xff);    //设置目标单元地址的低8 位地址
  66   1      
  67   1          EA = 0;
  68   1          IAP_TRIG = 0x46;   //先送 46h,再送B9h 到ISP/IAP 触发寄存器,每次都需如此
  69   1          IAP_TRIG = 0xB9;   //送完 B9h 后，ISP/IAP 命令立即被触发起动
  70   1          _nop_();
  71   1          EA = 1;
  72   1          IAP_Disable(); //关闭IAP 功能, 清相关的特殊功能寄存器,使CPU 处于安全状态,
  73   1                          //一次连续的IAP 操作完成之后建议关闭IAP 功能,不需要每次都关
  74   1          return (IAP_DATA);
  75   1      }//------------------------------------------------------------------------------
  76          
  77          //字节编程，调用前需打开IAP 功能，入口:DPTR = 字节地址, A= 须编程字节的数据
  78          void Byte_Program(u16 add,u8 ch)
  79          {
  80   1          IAP_CONTR = ENABLE_ISP;         //打开 IAP 功能, 设置Flash 操作等待时间
  81   1          IAP_CMD = 0x02;                 //IAP/ISP/EEPROM 字节编程命令
  82   1      
  83   1      
  84   1          IAP_ADDRH = (u8)(add>>8);    //设置目标单元地址的高8 位地址
  85   1          IAP_ADDRL = (u8)(add&0xff);    //设置目标单元地址的低8 位地址
  86   1      
  87   1          IAP_DATA = ch;                  //要编程的数据先送进IAP_DATA 寄存器
  88   1          EA = 0;
  89   1          IAP_TRIG = 0x46;   //先送 46h,再送B9h 到ISP/IAP 触发寄存器,每次都需如此
  90   1          IAP_TRIG = 0xB9;   //送完 B9h 后，ISP/IAP 命令立即被触发起动
  91   1          _nop_();
  92   1          EA = 1;
  93   1          IAP_Disable(); //关闭IAP 功能, 清相关的特殊功能寄存器,使CPU 处于安全状态,
  94   1                          //一次连续的IAP 操作完成之后建议关闭IAP 功能,不需要每次都关
  95   1      }//------------------------------------------------------------------------------
  96          
  97          //擦除扇区, 入口:DPTR = 扇区地址
  98          void Sector_Erase(u16 add)
  99          {
 100   1          IAP_CONTR = ENABLE_ISP;         //打开IAP 功能, 设置Flash 操作等待时间
 101   1          IAP_CMD = 0x03;                 //IAP/ISP/EEPROM 扇区擦除命令
 102   1      
 103   1          IAP_ADDRH = (u8)(add>>8);    //设置目标单元地址的高8 位地址
 104   1          IAP_ADDRL = (u8)(add&0xff);    //设置目标单元地址的低8 位地址
 105   1      
 106   1          EA = 0;
 107   1          IAP_TRIG = 0x46;   //先送 46h,再送B9h 到ISP/IAP 触发寄存器,每次都需如此
 108   1          IAP_TRIG = 0xB9;   //送完 B9h 后，ISP/IAP 命令立即被触发起动
 109   1          _nop_();
 110   1          EA = 1;
 111   1          IAP_Disable(); //关闭IAP 功能, 清相关的特殊功能寄存器,使CPU 处于安全状态,
 112   1                          //一次连续的IAP 操作完成之后建议关闭IAP 功能,不需要每次都关
 113   1      }//------------------------------------------------------------------------------
 114          
 115          void IAP_Disable()
 116          {
C51 COMPILER V9.01   EEPROM                                                                06/02/2021 20:52:43 PAGE 3   

 117   1          //关闭IAP 功能, 清相关的特殊功能寄存器,使CPU 处于安全状态,
 118   1          //一次连续的IAP 操作完成之后建议关闭IAP 功能,不需要每次都关
 119   1          IAP_CONTR = 0;      //关闭IAP 功能
 120   1          IAP_CMD   = 0;      //清命令寄存器,使命令寄存器无命令,此句可不用
 121   1          IAP_TRIG = 0;      //清命令触发寄存器,使命令触发寄存器无触发,此句可不用
 122   1          IAP_ADDRH = 0;
 123   1          IAP_ADDRL = 0;
 124   1      }//------------------------------------------------------------------------------
 125          void delayms(u16 z)
 126          {
 127   1      u16 x,y;
 128   1      for(x=z;x>0;x--)
 129   1         for(y=125;y>0;y--);
 130   1      }//-------------------------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    354    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
